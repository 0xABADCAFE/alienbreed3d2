#!/usr/bin/python3

import sys
import os
import tempfile

iIncRev = 0
iIncVer = 0

oFileHandle = tempfile.NamedTemporaryFile();

# Command to get the short hash and date (AmigaOS version style) of the most recent commit
sCommand  = "git log -1 --pretty=format:\"%h,%ad\" --date=format:\"%d.%m.%Y\" > {path}\n".format(path=oFileHandle.name)

os.system(sCommand)

oFileHandle.seek(0);
aData = oFileHandle.readline().decode('utf-8').split(',')
oFileHandle.close()

sHash = aData[0]
sDate = aData[1]


oFileHandle = open('current.txt', 'r+')
aData = oFileHandle.readline().split(',')

iVersion  = int(aData[0])
iRevision = int(aData[1])

print(
    "Current version: {ver}.{rev}, hash: {hash}, date: {date}\n".format(
        ver  = iVersion,
        rev  = iRevision,
        hash = sHash,
        date = sDate
    )
)

if len(sys.argv) > 1:
    match sys.argv[1]:
        case '-v' | '--version':
            iIncVer = 1

        case '-r' | '--revision':
            iIncRev = 1

        case '--reset':
            iIncVer = 1 - iVersion
            iIncRev = 0 - iRevision

    print(
        "Version will be changed from {v1}.{r1} to {v2}.{r2}\n".format(
            v1 = iVersion,
            r1 = iRevision,
            v2 = iVersion + iIncVer,
            r2 = iRevision + iIncRev
        )
    )

iVersion  += iIncVer
iRevision += iIncRev

oFileHandle.seek(0);
oFileHandle.write(
    "{ver},{rev},\n".format(
        ver = iVersion,
        rev = iRevision
    )
)
oFileHandle.close()

sTemplate = "\t\tdc.b\t0,\"$VER: tkg_{hash} {ver}.{rev} ({date})\",0\n"
sVersionString = sTemplate.format(
    hash = sHash,
    ver  = iVersion,
    rev  = iRevision,
    date = sDate
)

oFileHandle = open('data/version.i', 'w')
oFileHandle.write("\t\t; Generated by bumprev.py, do not edit\n")
oFileHandle.write(sVersionString)
oFileHandle.close()
