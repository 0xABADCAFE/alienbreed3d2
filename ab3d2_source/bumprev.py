#!/usr/bin/python3

import sys
import os
import tempfile


oFileHandle = tempfile.NamedTemporaryFile();

# Command to get the short hash and date (AmigaOS version style) of the most recent commit
sCommand  = "git log -1 --pretty=format:\"%h,%ad\" --date=format:\"%d.%m.%Y\" > {path}\n".format(path=oFileHandle.name)

os.system(sCommand)

oFileHandle.seek(0);
aData = oFileHandle.readline().decode('utf-8').split(',')
oFileHandle.close()

sHash = aData[0]
sDate = aData[1]


oFileHandle = open('current.txt', 'r+')
aData = oFileHandle.readline().split(',')

iIncRev   = 0
iIncVer   = 0
iIncBuild = 0
iVersion  = int(aData[0])
iRevision = int(aData[1])
iBuildNum = int(aData[2])

print(
    "Current version: {ver}.{rev} [.{build}], hash: {hash}, date: {date}\n".format(
        ver   = iVersion,
        rev   = iRevision,
        build = iBuildNum,
        hash  = sHash,
        date  = sDate
    )
)

if len(sys.argv) > 1:
    match sys.argv[1]:
        case '-b' | '--build':
            iIncBuild = 1

        case '-v' | '--version':
            iIncVer = 1

        case '-r' | '--revision':
            iIncRev = 1
            iBuildNum  = 0

        case '--reset':
            iIncVer   = 1 - iVersion
            iIncRev   = 0 - iRevision
            iIncBuild = 0 - iBuildNum

    print(
        "Version will be changed from {v1}.{r1} [.{b1}] to {v2}.{r2} [.{b2}]\n".format(
            v1 = iVersion,
            r1 = iRevision,
            b1 = iBuildNum,
            v2 = iVersion + iIncVer,
            r2 = iRevision + iIncRev,
            b2 = iBuildNum + iIncBuild
        )
    )

iVersion  += iIncVer
iRevision += iIncRev
iBuildNum += iIncBuild

oFileHandle.seek(0)
oFileHandle.write(
    "{ver},{rev},{build}\n".format(
        ver   = iVersion,
        rev   = iRevision,
        build = iBuildNum
    )
)
oFileHandle.close()

sTemplate = "\n\t\tdc.b\t0,\"$VER: tkg {ver}.{rev} ({date}) {flavour} build #{build}, commit:{hash}\",0\n\n"

oFileHandle = open('data/version.i', 'w')

oFileHandle.write(
    "\t; Generated by bumprev.py, do not edit\n" +
    "\tIFD DEV\n\n" +
    "\t\tIFD OPT060\n"
)

oFileHandle.write(sTemplate.format(
    hash    = sHash,
    ver     = iVersion,
    rev     = iRevision,
    date    = sDate,
    build   = iBuildNum,
    flavour = "68060 development"
))

oFileHandle.write(
    "\t\tENDC\n" +
    "\t\tIFD OPT040\n"
)

oFileHandle.write(sTemplate.format(
    hash    = sHash,
    ver     = iVersion,
    rev     = iRevision,
    date    = sDate,
    build   = iBuildNum,
    flavour = "68040 development"
))

oFileHandle.write(
    "\t\tENDC\n" +
    "\t\tIFND OPT060\n" +
    "\t\t\tIFND OPT040\n"
)

oFileHandle.write(sTemplate.format(
    hash    = sHash,
    ver     = iVersion,
    rev     = iRevision,
    date    = sDate,
    build   = iBuildNum,
    flavour = "68030+ development"
))

oFileHandle.write(
    "\t\t\tENDC\n" +
    "\t\tENDC\n\n" +
    "\tELSE\n\n" +
    "\t\tIFD OPT060\n"
)

oFileHandle.write(sTemplate.format(
    hash    = sHash,
    ver     = iVersion,
    rev     = iRevision,
    date    = sDate,
    build   = iBuildNum,
    flavour = "68060"
))

oFileHandle.write(
    "\t\tENDC\n" +
    "\t\tIFD OPT040\n"
)

oFileHandle.write(sTemplate.format(
    hash    = sHash,
    ver     = iVersion,
    rev     = iRevision,
    date    = sDate,
    build   = iBuildNum,
    flavour = "68040"
))

oFileHandle.write(
    "\t\tENDC\n" +
    "\t\tIFND OPT060\n" +
    "\t\t\tIFND OPT040\n"
)

oFileHandle.write(sTemplate.format(
    hash    = sHash,
    ver     = iVersion,
    rev     = iRevision,
    date    = sDate,
    build   = iBuildNum,
    flavour = "68030+"
))

oFileHandle.write(
    "\t\t\tENDC\n" +
    "\t\tENDC\n\n" +
    "\tENDC\n"
)

oFileHandle.close()
